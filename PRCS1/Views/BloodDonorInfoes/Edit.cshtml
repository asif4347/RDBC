﻿@model PRCS.Models.BloodDonorInfo
@{
    ViewBag.Title = "Edit";
}
<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Blood Donor Info</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <input name="isSelected" value="notSelected" type="hidden" />
        <input name="issueDate" value="@DateTime.Now" type="hidden" />
        <div class="panel panel-primary">
            <div class="panel-heading">
                Personal Info
            </div>
            <div class="panel-body">
                <div class="row">
                    @Html.LabelFor(model => model.DonorNo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">

                        @Html.EditorFor(model => model.DonorNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DonorNo, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">

                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
                <div class="row">
                    @Html.LabelFor(model => model.SonOf, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        @Html.EditorFor(model => model.SonOf, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SonOf, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
                <div class="row">
                    @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })

                    <div class="col-xs-3">

                        @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">

                        <select class="list-group-item-text" required name="Gender" style="height:30px">
                            <option value=@Html.DisplayFor(model=>model.Gender)>@Html.DisplayFor(model => model.Gender)</option>
                            <option value="M">Male</option>
                            <option value="F">Female</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
        <br />

        <div class="panel panel-primary">
            <div class="panel-heading">
                Blood Information
            </div>
            <div class="panel-body">
                <div class="row">
                    @Html.LabelFor(model => model.BloodGroup, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        <select class="list-group-item-text" name="BloodGroup" style="height:30px" required>
                            <option value=@Html.DisplayFor(model=>model.BloodGroup)>@Html.DisplayFor(model => model.BloodGroup)</option>
                            <option value="A+">A+</option>
                            <option value="A-">A-</option>
                            <option value="B+">B+</option>
                            <option value="B-">B-</option>
                            <option value="AB+">AB+</option>
                            <option value="AB-">AB-</option>
                            <option value="O+">O+</option>
                            <option value="O-">O-</option>
                        </select>
                    </div>
                    @Html.LabelFor(model => model.LastDonation, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        @Html.EditorFor(model => model.LastDonation, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastDonation, "", new { @class = "text-danger" })
                    </div>
                </div><br />
                <div class="row">
                    @Html.LabelFor(model => model.NoOfDonation, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">

                        @Html.EditorFor(model => model.NoOfDonation, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NoOfDonation, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
                <div class="row">


                    <label>  Would you Like to be permanent donor? </label>
                    <select class="list-group-item-text" name="PermanentDonor" style="height:30px" required>
                        <option value=@Html.DisplayFor(model=>model.PermanentDonor)>@Html.DisplayFor(model => model.PermanentDonor)</option>

                        <option value="Yes">Yes</option>
                        <option value="No">No</option>
                    </select>

                </div>
            </div>
        </div>

        <div class="panel panel-primary">
            <div class="panel-heading">
                TTI Screaning
            </div>
            <div class="panel-body">
                <div class="row">

                    @Html.LabelFor(model => model.HBsAg, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        <select class="list-group-item-text" name="HBsAg" style="height:30px" required>
                            <option value=@Html.DisplayFor(model=>model.HBsAg)>@Html.DisplayFor(model => model.HBsAg)</option>
                            <option value="Reactive">Reactive</option>
                            <option value="NonReactive">NonReactive</option>
                        </select>
                    </div>
                    @Html.LabelFor(model => model.HCV, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">

                        <select class="list-group-item-text" name="HCV" style="height:30px" required>
                            <option value=@Html.DisplayFor(model=>model.HCV)>@Html.DisplayFor(model => model.HCV)</option>
                            <option value="Reactive">Reactive</option>
                            <option value="NonReactive">NonReactive</option>
                        </select>
                    </div>
                </div>
                <br />
                <div class="row">

                    @Html.LabelFor(model => model.HIV, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        <select class="list-group-item-text" name="HIV" style="height:30px" required>
                            <option value=@Html.DisplayFor(model=>model.HIV)>@Html.DisplayFor(model => model.HIV)</option>
                            <option value="Reactive">Reactive</option>
                            <option value="NonReactive">NonReactive</option>
                        </select>
                    </div>
                    @Html.LabelFor(model => model.Syphilis, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        <select class="list-group-item-text" name="Syphilis" style="height:30px" required>
                            <option value=@Html.DisplayFor(model=>model.Syphilis)>@Html.DisplayFor(model => model.Syphilis)</option>
                            <option value="Reactive">Reactive</option>
                            <option value="NonReactive">NonReactive</option>
                        </select>
                    </div>
                </div>
                <br />



                <div class="row">
                    @Html.LabelFor(model => model.Malaria, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        <select class="list-group-item-text" name="Malaria" style="height:30px" required>
                            <option value=@Html.DisplayFor(model=>model.Malaria)>@Html.DisplayFor(model => model.Malaria)</option>
                            <option value="Reactive">Reactive</option>
                            <option value="NonReactive">NonReactive</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
        <br />
        <div class="panel panel-primary">
            <div class="panel-heading">
                Other Information
            </div>
            <div class="panel-body">
                <div class="row">


                    @Html.LabelFor(model => model.District, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        @Html.EditorFor(model => model.District, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.District, "", new { @class = "text-danger" })
                    </div>

                    @Html.LabelFor(model => model.Adress, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        @Html.EditorFor(model => model.Adress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Adress, "", new { @class = "text-danger" })
                    </div>

                </div>
                <br />
                <div class="row">
                    @Html.LabelFor(model => model.Class, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        @Html.EditorFor(model => model.Class, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Class, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.TelOffice, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        @Html.EditorFor(model => model.TelOffice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TelOffice, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
                <div class="row">
                    @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
                @Html.LabelFor(model => model.Institute, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-xs-3">
                    @Html.EditorFor(model => model.Institute, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Institute, "", new { @class = "text-danger" })
                </div>

            </div>
        </div>








        <div class="panel panel-primary">
            <div class="panel-heading">
                Donor's Reaction
            </div>
            <div class="panel-body">
                <div class="row">
                    @Html.LabelFor(model => model.DonorReaction, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                      
                        <div class="checkbox">
                            <label>
                                <input type="checkbox" name="Nausia" value="Nausia" />
                                Nausia
                            </label>
                        </div>
                        <div class="checkbox">
                            <label>
                                <input type="checkbox" name="Vom" value="Vom" />
                                Vom
                            </label>
                        </div>
                        <div class="checkbox">
                            <label>
                                <input type="checkbox" name="Dizziness" value="Dizziness" />
                                Dizziness
                            </label>
                        </div>
                        <div class="checkbox">
                            <label>
                                <input type="checkbox" name="Fainting" value="Fainting" />
                                Fainting
                            </label>
                        </div>
                        <div class="checkbox">
                            <label>
                                <input type="checkbox" name="Convulsions" value="Convulsions" />
                                Convulsions
                            </label>
                        </div>
                        <div class="checkbox">
                            <label>
                                <input type="checkbox" name="Other" value="Other" />
                                Other
                            </label>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />

            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
