﻿@model PRCS.Models.BloodDonorInfo
@{
    ViewBag.Title = "Patient Info";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Donor: @Html.DisplayFor(model => model.Name) </h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        <input name="isSelected" value="Selected" type="hidden" />
        <div class="panel panel-primary">
            <div class="panel-heading">
                Patient's Information
            </div>
            <div class="panel-body">
                <div class="row">

                    <div class="col-xs-3">
                        <label>Patient Name</label>
                        @Html.EditorFor(model => model.PatientName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PatientName, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-xs-3">
                        <label>Prescribed By</label>
                        @Html.EditorFor(model => model.PresBy, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PresBy, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">

                    <div class="col-xs-3">
                        <label>Cause</label>
                        @Html.EditorFor(model => model.Cause, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Cause, "", new { @class = "text-danger" })


                    </div>
                    <div class="col-xs-3">
                        <label>Issuence Date</label>
                        @Html.EditorFor(model => model.issueDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.issueDate, "", new { @class = "text-danger" })


                    </div>
                    


                </div>

                
                <div class="col-xs-3">
                    <label>Cross Match</label><br />
                    <select name="crossMatch">
                        <option value="">--Select--</option>
                        <option value="Yes">Yes</option>
                        <option value="No">No</option>
                    </select>
                </div>
                <br /><br /><br />

                <div class="row">
                    <div class="col-xs-3">
                        <label>Adverse Reaction Report</label>
                        <select name="AdverseReaction">
                            <option value="">--Select--</option>
                            <option value="Yes">Yes</option>
                            <option value="No">No</option>
                        </select>
                    </div>

                    <div class="col-xs-3">
                        <label>Details(if Adverse Reaction)</label>
                        @Html.EditorFor(model => model.Details, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger" })


                    </div>
                </div>
                </div>
            </div>
               

                <div class="hidden">

                    @Html.LabelFor(model => model.DonorNo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        @Html.EditorFor(model => model.DonorNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DonorNo, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="hidden">
                    @Html.LabelFor(model => model.SonOf, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        @Html.EditorFor(model => model.SonOf, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SonOf, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="hidden">
                    @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        <select class="list-group-item-text" required name="Gender" style="height:30px">
                            <option value=@Html.DisplayFor(model=>model.Gender)>@Html.DisplayFor(model => model.Gender)</option>
                            <option value="M">Male</option>
                            <option value="F">Female</option>
                        </select>
                    </div>
                </div>

                <div class="hidden">
                    @Html.LabelFor(model => model.BloodGroup, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        <select class="list-group-item-text" name="BloodGroup" style="height:30px" required>
                            <option value=@Html.DisplayFor(model=>model.BloodGroup)>@Html.DisplayFor(model => model.BloodGroup)</option>
                            <option value="A+">A+</option>
                            <option value="A-">A-</option>
                            <option value="B+">B+</option>
                            <option value="B-">B-</option>
                            <option value="AB+">AB+</option>
                            <option value="AB-">AB-</option>
                            <option value="O+">O+</option>
                            <option value="O-">O-</option>
                        </select>
                    </div>
                    @Html.LabelFor(model => model.LastDonation, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        @Html.EditorFor(model => model.LastDonation, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastDonation, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="hidden">
                    @Html.LabelFor(model => model.NoOfDonation, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        @Html.EditorFor(model => model.NoOfDonation, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NoOfDonation, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.District, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        @Html.EditorFor(model => model.District, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.District, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="hidden">
                    @Html.LabelFor(model => model.Adress, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        @Html.EditorFor(model => model.Adress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Adress, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.PermanentDonor, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        <select class="list-group-item-text" name="PermanentDonor" style="height:30px" required>
                            <option value=@Html.DisplayFor(model=>model.PermanentDonor)>@Html.DisplayFor(model => model.PermanentDonor)</option>
                            <option value="Yes">Yes</option>
                            <option value="No">No</option>
                        </select>
                    </div>
                </div>

                <div class="hidden">
                    @Html.LabelFor(model => model.HBsAg, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        <select class="list-group-item-text" name="HBsAg" style="height:30px" required>
                            <option value=@Html.DisplayFor(model=>model.HBsAg)>@Html.DisplayFor(model => model.HBsAg)</option>
                            <option value="Reactive">Reactive</option>
                            <option value="NonReactive">NonReactive</option>
                        </select>
                    </div>
                    @Html.LabelFor(model => model.HCV, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        <select class="list-group-item-text" name="HCV" style="height:30px" required>
                            <option value=@Html.DisplayFor(model=>model.HCV)>@Html.DisplayFor(model => model.HCV)</option>
                            <option value="Reactive">Reactive</option>
                            <option value="NonReactive">NonReactive</option>
                        </select>
                    </div>
                </div>

                <div class="hidden">
                    @Html.LabelFor(model => model.HIV, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        <select class="list-group-item-text" name="HIV" style="height:30px" required>
                            <option value=@Html.DisplayFor(model=>model.HIV)>@Html.DisplayFor(model => model.HIV)</option>
                            <option value="Reactive">Reactive</option>
                            <option value="NonReactive">NonReactive</option>
                        </select>
                    </div>
                    @Html.LabelFor(model => model.Syphilis, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        <select class="list-group-item-text" name="Syphilis" style="height:30px" required>
                            <option value=@Html.DisplayFor(model=>model.Syphilis)>@Html.DisplayFor(model => model.Syphilis)</option>
                            <option value="Reactive">Reactive</option>
                            <option value="NonReactive">NonReactive</option>
                        </select>
                    </div>
                </div>


                <div class="hidden">
                    @Html.LabelFor(model => model.Malaria, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        <select class="list-group-item-text" name="Malaria" style="height:30px" required>
                            <option value=@Html.DisplayFor(model=>model.Malaria)>@Html.DisplayFor(model => model.Malaria)</option>
                            <option value="Reactive">Reactive</option>
                            <option value="NonReactive">NonReactive</option>
                        </select>
                    </div>
                    @Html.LabelFor(model => model.Institute, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        @Html.EditorFor(model => model.Institute, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Institute, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="hidden">
                    @Html.LabelFor(model => model.Class, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        @Html.EditorFor(model => model.Class, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Class, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.TelOffice, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        @Html.EditorFor(model => model.TelOffice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TelOffice, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="hidden">
                    @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="hidden">
                    @Html.LabelFor(model => model.DonorReaction, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-3">
                        <div class="checkbox">
                            <label>
                                <input type="checkbox" name="Haematioma" value="Haematioma" />
                                Haematioma
                            </label>
                        </div>
                        <div class="checkbox">
                            <label>
                                <input type="checkbox" name="Nausia" value="Nausia" />
                                Nausia
                            </label>
                        </div>
                        <div class="checkbox">
                            <label>
                                <input type="checkbox" name="Vom" value="Vom" />
                                Vom
                            </label>
                        </div>
                        <div class="checkbox">
                            <label>
                                <input type="checkbox" name="Dizziness" value="Dizziness" />
                                Dizziness
                            </label>
                        </div>
                        <div class="checkbox">
                            <label>
                                <input type="checkbox" name="Fainting" value="Fainting" />
                                Fainting
                            </label>
                        </div>
                        <div class="checkbox">
                            <label>
                                <input type="checkbox" name="Convulsions" value="Convulsions" />
                                Convulsions
                            </label>
                        </div>
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Submit" class="btn btn-primary" />
                    </div>
                </div>
            </div>
            }
            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }
